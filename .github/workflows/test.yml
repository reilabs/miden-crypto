# Runs test related jobs.

name: test

on:
  push:
    branches: [main, next]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    name: test ${{matrix.toolchain}} on ${{matrix.os}} with ${{matrix.args}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly]
        os: [ubuntu]
        args: [default, smt-hashmaps, no-std]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@main
      - uses: taiki-e/install-action@nextest
      - name: Perform tests
        run: |
          rustup update --no-self-update ${{matrix.toolchain}}
          make test-${{matrix.args}}

  test-smt-concurrent:
    name: test-smt-concurrent (${{ matrix.toolchain }})
    runs-on: ubuntu-latest
    needs: test  # Wait for regular tests to finish first
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@main
      - uses: taiki-e/install-action@nextest
      - name: Perform concurrent SMT tests
        run: |
          rustup update --no-self-update ${{matrix.toolchain}}
          make test-smt-concurrent